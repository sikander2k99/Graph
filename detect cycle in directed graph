class Solution {
    private:
     bool dfscheck(int node , vector<int> &vis , vector<int> &pathvis , vector<vector<int>> &adj){
      vis[node] = 1;
      pathvis[node] = 1;
      for(auto it : adj[node]){
          if(!vis[it]){
              if (dfscheck(it , vis , pathvis , adj)== true )
              return true;
           
          }
           else if (pathvis[it]){
                return true;
            }
      }
      pathvis[node] = 0 ;
      return false ;
     }
  public:
    // Function to detect cycle in a directed graph.
    bool isCyclic(int V, vector<vector<int>> adj) {
        vector<int> vis(V , 0);
        vector<int> pathvis(V, 0);
        for(int i = 0 ; i <  V; i++){
            if(!vis[i]){
               if( dfscheck(i , vis , pathvis , adj)== true )return true;;
            }
        }
        return false ;
    }
};
