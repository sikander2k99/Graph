class Solution {
    private:
    bool detect(int src ,vector<vector<int>>& adj , vector<int> &vis){
        vis[src] = 1;
        queue<pair<int , int>> q;
        q.push({src, -1});
        while(!q.empty()){
            int nr = q.front().first;
            int nc = q.front().second;
            q.pop();
            for(auto it : adj[nr]){
                if(!vis[it]){
                    vis[it] = 1 ;
                    q.push({it , nr});
                    
                }
                else if(nc != it)
                return true;
            }
        }
        return false ;
    }
  public:
    bool isCycle(vector<vector<int>>& adj) {
        int n = adj.size();
        vector<int> vis(n ,0);
        for(int i = 0 ; i < n ;i++){
            if(!vis[i]){
                if(detect(i , adj , vis)) return true;
            }
        }
    return false;
    }
};
