class Solution {
    private:
     void dfs( int r, int c, vector<vector<int>> &ans , vector<vector<int>>& image,int color ,vector<int> dr , vector<int> dc , int ini){
        ans[r][c] = color;
        int n = image.size();
        int m = image[0].size();
        for(int i= 0 ; i<4 ; i++){
          int nr = r + dr[i];
          int nc = c + dc[i] ;
          if(nr>=0 && nr < n && nc >=0 && nc< m && ans[nr][nc] != color && image[nr][nc]== ini){
            dfs(nr , nc , ans , image , color , dr ,dc ,ini);
          }
        }
     }
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int ini = image[sr][sc];
        vector<vector<int>> ans = image;
        vector<int> dr = {-1 , 0 , +1 , 0};
        vector<int> dc = {0 , +1 , 0 , -1};
        dfs(sr , sc , ans , image , color , dr , dc , ini);
        return ans;
    
    }
};
